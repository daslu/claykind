[nil "#'kindly.grammars/hiccup-table" "#'kindly.grammars/Hiccup" "#'kindly.grammars/parse-hiccup" [:node {:name :table, :props nil, :children [[:node {:name :tr, :props nil, :children [[:node {:name :td, :props nil, :children [[:primitive [:number 1]]]}] [:node {:name :td, :props nil, :children [[:primitive [:number 2]]]}]]}] [:node {:name :tr, :props nil, :children [[:node {:name :td, :props nil, :children [[:primitive [:number 3]]]}] [:node {:name :td, :props nil, :children [[:primitive [:number 4]]]}]]}]]}] {:headers [], :row-vectors []} {:row-maps [], :headers []} [[1 2] [3 4]] (tabulate values) (tabulate headers values) "#'kindly.grammars/Table" {} "BufferedImage@279afa4e: type = 6 ColorModel: #pixelBits = 32 numComponents = 4 color space = java.awt.color.ICC_ColorSpace@519f1a7d transparency = 3 has alpha = true isAlphaPre = false ByteInterleavedRaster: width = 256 height = 256 #numDataElements 4 dataOff[0] = 3" "## This... is... :Markdown" {:this #{"is"}, data [1 2 3 nil]}]