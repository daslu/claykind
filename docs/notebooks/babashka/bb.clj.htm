<!DOCTYPE html>
<html><head><script src="https://unpkg.com/react@18/umd/react.production.min.js" type="text/javascript"></script><script src="https://unpkg.com/react-dom@18/umd/react-dom.production.min.js" type="text/javascript"></script><script src="https://scicloj.github.io/scittle/js/scittle.js" type="text/javascript"></script><script src="https://scicloj.github.io/scittle/js/scittle.reagent.js" type="text/javascript"></script><script src="http://localhost:59822/main.js?59830789-0bfa-4d3f-a49c-14390e78312b" type="text/javascript"></script></head><body><script type="application/x-scittle">(ns main (:require [reagent.core :as r] [reagent.dom :as dom]))</script><div># Babashka notebooks
</div><div>Babashka is, by design, as close to Clojure as possible.
</div><div id="widget2"></div><script type="application/x-scittle">(dom/render (fn [] [(fn [{:keys [edn-str]}] (let [api (js/portal.extensions.vs_code_notebook.activate)] [:div [:div]])) {}]) (.getElementById js/document "widget2"))</script><div id="widget3"></div><script type="application/x-scittle">(dom/render (fn [] [(fn [{:keys [edn-str]}] (let [api (js/portal.extensions.vs_code_notebook.activate)] [:div [:div]])) {}]) (.getElementById js/document "widget3"))</script><div id="widget4"></div><script type="application/x-scittle">(dom/render (fn [] [(fn [{:keys [edn-str]}] (let [api (js/portal.extensions.vs_code_notebook.activate)] [:div [:div]])) {}]) (.getElementById js/document "widget4"))</script><div id="widget5"></div><script type="application/x-scittle">(dom/render (fn [] [(fn [{:keys [edn-str]}] (let [api (js/portal.extensions.vs_code_notebook.activate)] [:div [:div]])) {}]) (.getElementById js/document "widget5"))</script><div id="widget6"></div><script type="application/x-scittle">(dom/render (fn [] [(fn [{:keys [edn-str]}] (let [api (js/portal.extensions.vs_code_notebook.activate)] [:div [:div]])) {}]) (.getElementById js/document "widget6"))</script><div>The notable differences are:
</div><div>* Code is evaluated with [Sci](https://github.com/babashka/SCI)
* Not all of Clojure is available
* Files start with a shell directive instead of a namespace
</div><div>Did you know that Clojure treats `#!` as a comment?
</div><div>So you can already create Babashka notebooks if you ignore the differences,
but this project (claykind) will detect Babashka and use Sci,
which will make it more directly compatible.
</div><div>Would it be interesting thing to try is running claykind from babashka?
What possibilities does that open up?
Faster command-line blog generation?
</div></body></html>