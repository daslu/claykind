<!DOCTYPE html>
<html><head></head><body><script src="https://unpkg.com/react@18/umd/react.production.min.js" type="text/javascript"></script><script src="https://unpkg.com/react-dom@18/umd/react-dom.production.min.js" type="text/javascript"></script><script src="https://scicloj.github.io/scittle/js/scittle.js" type="text/javascript"></script><script src="https://scicloj.github.io/scittle/js/scittle.reagent.js" type="text/javascript"></script><script type="application/x-scittle">(ns main (:require [reagent.core :as r] [reagent.dom :as dom]))</script><div id="widget0"></div><script type="application/x-scittle">(dom/render (fn [] [(fn [{:keys [edn-str]}] (let [api (js/portal.extensions.vs_code_notebook.activate)] [:div [:div {:ref (fn [el] (.renderOutputItem api (clj->js {:mime "x-application/edn", :text (fn [] edn-str)}) el))}]])) {:edn-str "^#:portal.viewer{:default :portal.viewer/hiccup} [:div [:p \"unimplemented kind\" [:code \"nil\"]] [:portal.viewer/code \"nil\\n\"]]"}]) (.getElementById js/document "widget0"))</script><div id="widget1"></div><script type="application/x-scittle">(dom/render (fn [] [(fn [{:keys [edn-str]}] (let [api (js/portal.extensions.vs_code_notebook.activate)] [:div [:div {:ref (fn [el] (.renderOutputItem api (clj->js {:mime "x-application/edn", :text (fn [] edn-str)}) el))}]])) {:edn-str "^#:portal.viewer{:default :portal.viewer/hiccup} [:div [:p \"unimplemented kind\" [:code \"nil\"]] [:portal.viewer/code \"nil\\n\"]]"}]) (.getElementById js/document "widget1"))</script></body></html>